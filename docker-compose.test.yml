name: mcp-prompts-test

services:
  # Test container for running the published package with npx
  npx-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    container_name: mcp-prompts-npx-test
    environment:
      - NODE_ENV=production
      - STORAGE_TYPE=file
      - PROMPTS_DIR=/test/prompts
      - LOG_LEVEL=info
      - HTTP_SERVER=false
      - PORT=3003
      - HOST=0.0.0.0
    volumes:
      - ../prompts:/test/prompts
    ports:
      - "3000:3000"
      - "3003:3003"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    stdin_open: true
    tty: true
    networks:
      - mcp-test-network

  # Test with MCP Inspector to verify functionality
  mcp-inspector:
    image: node:20-alpine
    container_name: mcp-prompts-inspector
    depends_on:
      npx-test:
        condition: service_healthy
    command: >
      sh -c "npm install -g @modelcontextprotocol/inspector &&
             echo 'Waiting for npx-test to be ready...' &&
             npx @modelcontextprotocol/inspector npx -y @sparesparrow/mcp-prompts"
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    stdin_open: true
    tty: true
    networks:
      - mcp-test-network

networks:
  mcp-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16 