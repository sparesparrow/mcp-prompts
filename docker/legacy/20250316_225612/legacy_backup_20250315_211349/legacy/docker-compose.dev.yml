
name: mcp-prompts-dev-environment

services:
  # PostgreSQL database for development
  postgres-dev:
    image: postgres:14-alpine
    container_name: mcp-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mcp_prompts_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  # Adminer for database management
  adminer:
    image: adminer
    container_name: mcp-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres-dev

  # MCP Prompts server with hot reloading
  mcp-prompts-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mcp-prompts-dev
    depends_on:
      postgres-dev:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - STORAGE_TYPE=postgres
      - PG_HOST=postgres-dev
      - PG_PORT=5432
      - PG_DATABASE=mcp_prompts_dev
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_SSL=false
      - HTTP_SERVER=true
      - PORT=3003
      - HOST=0.0.0.0
      - LOG_LEVEL=debug
    ports:
      - "3003:3003"
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./prompts:/app/prompts
      - ./node_modules:/app/node_modules
    command: npm run dev

volumes:
  postgres-dev-data:

networks:
  mcp-dev-network:
    driver: bridge 
